# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ho1bghkG9B3WQV_Lujf7n1-IzmEIYgw6
"""

import timeit
import matplotlib.pyplot as plt
from random import randint


def heapify(arr, n, i):
    largest = i
    left = 2 * i + 1
    right = 2 * i + 2


    if left < n and arr[left] > arr[largest]:
        largest = left


    if right < n and arr[right] > arr[largest]:
        largest = right


    if largest != i:
        arr[i], arr[largest] = arr[largest], arr[i]
        heapify(arr, n, largest)


def heapSort(arr):
    n = len(arr)


    for i in range(n // 2 - 1, -1, -1):
        heapify(arr, n, i)


    for i in range(n - 1, 0, -1):
        arr[i], arr[0] = arr[0], arr[i]
        heapify(arr, i, 0)


arr = [15, 17, 12, 5, 16, 7]
heapSort(arr)


print("Sorted array is:")
for i in range(len(arr)):
    print("%d" % arr[i])


list_length = [10000, 20000, 30000, 40000, 50000, 60000]


time_taken = []


for length in list_length:

    arr = [randint(1, 100000) for _ in range(length)]


    setup_code = "from __main__ import heapSort"
    test_code = f"heapSort({arr})"


    time_taken.append(timeit.timeit(test_code, setup=setup_code, number=1))


plt.plot(list_length, time_taken, marker='o')
plt.xlabel('List Length')
plt.ylabel('Time Taken (seconds)')
plt.title('Heap Sort Time Complexity')
plt.show()